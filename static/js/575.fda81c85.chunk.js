(()=>{"use strict";var e={7575:(e,t,s)=>{var a=s(9379),n=s(9397);class o{static async getInstance(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return this.tokenizer||(this.tokenizer=n.v6I.from_pretrained(this.model_id,{progress_callback:e})),this.model||(this.model=n.W6E.from_pretrained(this.model_id,{dtype:"q4f16",device:"webgpu",progress_callback:e})),[this.tokenizer,this.model]=await Promise.all([this.tokenizer,this.model]),[this.tokenizer,this.model]}}o.model_id="onnx-community/Qwen3-0.6B-ONNX",o.tokenizer=null,o.model=null;const r=new n.dYU;let i=null;self.addEventListener("message",(async e=>{const{type:t,data:s}=e.data;switch(t){case"check_webgpu":!async function(){try{if(!navigator.gpu)throw new Error("WebGPU is not supported by this browser.");if(!await navigator.gpu.requestAdapter())throw new Error("WebGPU is not supported (no adapter found)");self.postMessage({status:"webgpu_check_success",data:"WebGPU is available."})}catch(e){self.postMessage({status:"error",type:"webgpu_check_error",data:e.toString()})}}();break;case"load_model":!async function(){self.postMessage({status:"loading",data:"Loading summarization model..."});try{const[e,t]=await o.getInstance((e=>{self.postMessage(e)}));self.postMessage({status:"loading",data:"Compiling shaders and warming up summarization model..."});const s=e("This is a test.");await t.generate((0,a.A)((0,a.A)({},s),{},{max_new_tokens:1})),self.postMessage({status:"summarization_ready"})}catch(e){self.postMessage({status:"error",type:"load_model_error",data:e.toString()})}}();break;case"summarize":r.reset(),async function(t){let{transcriptionText:s,meetingTitle:c}=t;self.postMessage({status:"summarizing_started",data:{reasonEnabled:!0}});try{const[e,t]=await o.getInstance((e=>{self.postMessage(e)}));let l="Summarize the following meeting transcript concisely, focusing on key decisions, action items, and important discussions.";c&&""!==c.trim()&&(l+=' The title of this meeting is "'.concat(c,'".')),l+=' Structure the summary with the following sections:\n\n1. Meeting Overview \u2013 Date, attendees, and primary objective.\n2. Key Discussion Points \u2013 Bullet points of major topics covered (limit to 3-5).\n3. Decisions Made \u2013 Clear outcomes or resolutions agreed upon.\n4. Action Items \u2013 Specific tasks, assigned owners, and deadlines (if mentioned).\n5. Next Steps \u2013 Any follow-up meetings or pending discussions.\nMaintain a professional tone, avoid unnecessary details, and ensure clarity. Here is the transcript:\n\n"'.concat(s,'"');const p=[{role:"system",content:"You are a helpful meeting summarization assistant. First, think about the key points of the transcription, then provide a concise summary."},{role:"user",content:l}];console.log(p);const u=e.apply_chat_template(p,{add_generation_prompt:!0,return_dict:!0}),[d,m]=e.encode("<think></think>",{add_special_tokens:!1});let g,f,_=0,h="answering";const k=e=>{var t;switch(null!==(t=g)&&void 0!==t||(g=performance.now()),_++>0&&(f=_/(performance.now()-g)*1e3),Number(e[0])){case d:h="thinking";break;case m:h="answering"}},y=e=>{let t={status:"update",output:"",tps:f,numTokens:_,state:h};"answering"===h&&(t.output=e),self.postMessage(t)},w=new n.T1P(e,{skip_prompt:!0,skip_special_tokens:!0,callback_function:y,token_callback_function:k}),b=(0,a.A)((0,a.A)({},u),{},{past_key_values:i,do_sample:!0,top_k:20,temperature:.6,max_new_tokens:1024,streamer:w,stopping_criteria:r,return_dict_in_generate:!0});void 0===u.token_type_ids&&delete b.token_type_ids;const{past_key_values:v,sequences:z}=await t.generate(b);i=v;let M,O=e.batch_decode(z,{skip_special_tokens:!0})[0];const S=e.decode(u.input_ids,{skip_special_tokens:!0});O.startsWith(S)?M=O.substring(S.length):(M=O,console.warn("Summarization worker: Prompt (from input_ids) not found at the start of batch_decode output. The final summary might contain parts of the prompt.")),M=M.replace(/<think>[^]*?<\/think>/g,"").trim(),self.postMessage({status:"summarizing_complete",output:M})}catch(e){self.postMessage({status:"error",type:"summarization_error",data:e.toString()})}}(s);break;case"interrupt_summarization":r.interrupt(),i=null,self.postMessage({status:"summarization_interrupted"});break;case"reset_summarization":i=null,r.reset(),self.postMessage({status:"summarization_reset"});break;default:console.warn("Unknown message type received in summarization worker:",t)}}))}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,s),o.exports}s.m=e,s.x=()=>{var e=s.O(void 0,[827,397],(()=>s(7575)));return e=s.O(e)},(()=>{var e=[];s.O=(t,a,n,o)=>{if(!a){var r=1/0;for(p=0;p<e.length;p++){a=e[p][0],n=e[p][1],o=e[p][2];for(var i=!0,c=0;c<a.length;c++)(!1&o||r>=o)&&Object.keys(s.O).every((e=>s.O[e](a[c])))?a.splice(c--,1):(i=!1,o<r&&(r=o));if(i){e.splice(p--,1);var l=n();void 0!==l&&(t=l)}}return t}o=o||0;for(var p=e.length;p>0&&e[p-1][2]>o;p--)e[p]=e[p-1];e[p]=[a,n,o]}})(),s.d=(e,t)=>{for(var a in t)s.o(t,a)&&!s.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},s.f={},s.e=e=>Promise.all(Object.keys(s.f).reduce(((t,a)=>(s.f[a](e,t),t)),[])),s.u=e=>"static/js/"+e+"."+{397:"1823f431",827:"b0032c7c"}[e]+".chunk.js",s.miniCssF=e=>{},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.p="/noted-pak/",(()=>{s.b=self.location+"/../../../";var e={575:1};s.f.i=(t,a)=>{e[t]||importScripts(s.p+s.u(t))};var t=self.webpackChunknoted_pak=self.webpackChunknoted_pak||[],a=t.push.bind(t);t.push=t=>{var n=t[0],o=t[1],r=t[2];for(var i in o)s.o(o,i)&&(s.m[i]=o[i]);for(r&&r(s);n.length;)e[n.pop()]=1;a(t)}})(),(()=>{var e=s.x;s.x=()=>Promise.all([s.e(827),s.e(397)]).then(e)})();s.x()})();
//# sourceMappingURL=575.fda81c85.chunk.js.map